#---------------------------------------------------------------------
# Example configuration for a possible web application.  See the
# full configuration options online.
#
#   http://haproxy.1wt.eu/download/1.4/doc/configuration.txt
#
#---------------------------------------------------------------------

#---------------------------------------------------------------------
# Global settings
#---------------------------------------------------------------------
global
    # to have these messages end up in /var/log/haproxy.log you will
    # need to:
    #
    # 1) configure syslog to accept network log events.  This is done
    #    by adding the '-r' option to the SYSLOGD_OPTIONS in
    #    /etc/sysconfig/syslog
    #
    # 2) configure local2 events to go to the /var/log/haproxy.log
    #   file. A line like the following can be added to
    #   /etc/sysconfig/syslog
    #
    #    local2.*                       /var/log/haproxy.log
    #
    log         127.0.0.1 local2

    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    maxconn     4000
    user        haproxy
    group       haproxy
    daemon
    tune.ssl.default-dh-param 2048

    # turn on stats unix socket
    stats socket /var/lib/haproxy/stats

#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    mode                    http
    log                     global
    option                  httplog
    option                  dontlognull
    option http-server-close
    option forwardfor       except 127.0.0.0/8
    option                  redispatch
    retries                 3
    timeout http-request    30s
    timeout queue           1m
    timeout connect         10s
    timeout client          1m
    timeout server          1m
    timeout http-keep-alive 30s
    timeout check           30s
    maxconn                 3000

frontend www
    bind :80
    bind :443 ssl crt /etc/pki/tls/certs/ada.hph.com.pem
    reqadd X-Forwarded-Proto:\ http
#    redirect scheme https if !{ ssl_fc }
    acl uri_jira       path_beg /jira/
    acl uri_confluence path_beg /confluence
    acl uri_bitbucket  path_beg /bitbucket
    acl uri_hiptest  path_beg /hiptest
    acl uri_nexus  path_beg /nexus
    acl uri_jenkins  path_beg /jenkins
    acl uri_upsource  path_beg /upsource
    acl uri_artifactory path_beg /artifactory
    use_backend jira-backend       if uri_jira
    use_backend confluence-backend if uri_confluence
    use_backend bitbucket-backend  if uri_bitbucket
    redirect location /hiptest if { path -i / }
    redirect location /jira/ if { path -i /jira }
    use_backend hiptest-backend  if uri_hiptest
    use_backend nexus-backend  if uri_nexus
    use_backend jenkins-backend  if uri_jenkins
    use_backend upsource-backend if uri_upsource
    use_backend artifactory-backend if uri_artifactory
    default_backend hiptest-backend

backend jira-backend
    server jira 127.0.0.1:8080 check

backend confluence-backend
    server confluence 127.0.0.1:8090 check

backend bitbucket-backend
    server bitbucket 127.0.0.1:7990 check

backend hiptest-backend
    reqrep ^([^\ ]*\ /)hiptest[/]?(.*) \1\2
    http-request set-header X-Forwarded-Proto https if  { ssl_fc }
    http-request set-header X-Forwarded-Proto http  if !{ ssl_fc }
#    server hiptest hiptest.hph.com:443 check ssl verify none
    server hiptest hiptest.hph.com:80 check

backend nexus-backend 
    server nexus 172.18.251.176:80 check

backend jenkins-backend 
    server nexus 172.18.251.176:80 check

backend apache-backend
    redirect scheme https if !{ ssl_fc }
    server apache 127.0.0.1:10080 check

backend artifactory-backend
    server artifactory 127.0.0.1:8081 check

backend upsource-backend
    http-request set-header X-Forwarded-Proto https if  { ssl_fc }
    http-request set-header X-Forwarded-Proto http  if !{ ssl_fc }
    server upsource 172.25.130.185:8080 check

frontend local-directory-server
    mode tcp
    bind 127.0.0.1:389
    use_backend HIT-directory-servers

backend HIT-directory-servers
    mode tcp
    option tcp-check
    balance roundrobin
    server HITDC011 202.45.254.31:636 weight 1 maxconn 10 check check-ssl ssl verify none
    server HITDC033 172.18.110.54:636 weight 1 maxconn 10 check check-ssl ssl verify none

